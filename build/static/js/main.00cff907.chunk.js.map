{"version":3,"sources":["components/moviecard.js","components/dialog.js","App.js","serviceWorker.js","index.js"],"names":["Moviecard","selectmovie","_this$props","_this","props","movie","this","react_default","a","createElement","Card","className","CardActionArea","CardMedia","class","component","alt","height","image","concat","backdrop_path","title","CardContent","Typography","gutterBottom","variant","color","overview","CardActions","Button","size","onClick","React","Component","Moviedialog","handleClose","handleClickOpen","content","DialogTitle","id","DialogContent","DialogContentText","TextField","autoFocus","margin","label","type","value","release_date","disabled","fullWidth","popularity","vote_average","vote_count","onMouseOver","Dialog","open","onClose","aria-labelledby","DialogActions","App","state","movies","selectedmovie","search","setState","clearmovie","searchTextchanged","e","searchText","target","_callee","response","json","regenerator_default","wrap","_context","prev","next","preventDefault","fetch","sent","results","stop","_this2","_this$state","AppBar","position","Toolbar","IconButton","edge","aria-label","Menu_default","noWrap","onSubmit","onChange","startAdornment","InputAdornment","role","arial-label","map","components_moviecard","dialog_Moviedialog","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.00cff907.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport '../components/moviecard.css';\r\n\r\n\r\n\r\n\r\nclass Moviecard extends React.Component{\r\nselectmovie =()=>{\r\n    const{movie,selectmovie}=this.props;\r\n    selectmovie(movie);\r\n};\r\n    render(){\r\n    const {movie}=this.props;\r\n    return (\r\n          <Card className='movie-card1'>\r\n            <CardActionArea className='movie-card1'>\r\n              <CardMedia class='movie-image'\r\n                component=\"img\"\r\n                alt=\"moviess\"\r\n                height=\"240\"\r\n                image={`http://image.tmdb.org/t/p/w300${movie.backdrop_path}`}\r\n                title=\"movies\"\r\n              />\r\n              <CardContent>\r\n                <Typography gutterBottom variant=\"h5\" component=\"h1\">\r\n                  {movie.title}\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                {movie.overview}\r\n                </Typography>\r\n              </CardContent>\r\n            </CardActionArea>\r\n            <CardActions>\r\n              \r\n            \r\n              <Button size=\"small\" color=\"primary\" onClick={this.selectmovie}>\r\n                Learn More\r\n              </Button>\r\n            </CardActions>\r\n          </Card>\r\n    )}\r\n        }\r\n\r\nexport default Moviecard;","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n import { CardMedia } from '@material-ui/core';\r\nimport './dialog.css';\r\n\r\nexport default class Moviedialog extends React.Component{\r\n    render(){\r\n        const {movie, handleClose,handleClickOpen}=this.props;\r\n    let title=null;\r\n    let content=null;\r\n\r\n    if(movie){\r\n        title=<DialogTitle id=\"form-dialog-title\">{movie.title}</DialogTitle>\r\n        content=<DialogContent>\r\n        <DialogContentText>\r\n          {movie.overview}\r\n        </DialogContentText>\r\n        <CardMedia className='movie-detailed-image'\r\n                image={`http://image.tmdb.org/t/p/w300${movie.backdrop_path}`}\r\n                title={movie.title}\r\n              />\r\n\r\n        <TextField\r\n          autoFocus\r\n          margin=\"dense\"\r\n          id=\"name\"\r\n          label=\"Release-date\"\r\n          type=\"date\"\r\n          value={movie.release_date}\r\n          disabled\r\n          fullWidth\r\n        />\r\n           <TextField\r\n          autoFocus\r\n          margin=\"dense\"\r\n          id=\"name\"\r\n          label=\"Popularity\"\r\n          value={movie.popularity}\r\n          disabled\r\n          fullWidth\r\n        />\r\n           <TextField\r\n          autoFocus\r\n          margin=\"dense\"\r\n          id=\"name\"\r\n          label=\"Vote average\"\r\n         \r\n          value={movie.vote_average}\r\n          disabled\r\n          fullWidth\r\n        />\r\n           <TextField\r\n          autoFocus\r\n          margin=\"dense\"\r\n          id=\"name\"\r\n          label=\"Vote count\"\r\n         \r\n          value={movie.vote_count}\r\n          disabled\r\n          fullWidth\r\n        />\r\n      </DialogContent>\r\n      \r\n    }\r\n  return (\r\n      \r\n    <div>\r\n      <Button variant=\"outlined\" color=\"primary\" onMouseOver={handleClickOpen}>\r\n        Open form dialog\r\n      </Button>\r\n      <Dialog open={!!movie} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n    {title}\r\n    {content}\r\n        <DialogActions>\r\n          <Button onMouseOver={handleClose} color=\"primary\">\r\n            Close\r\n          </Button>\r\n \r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n        }}","import React ,{Component} from 'react';\nimport './App.css';\nimport Moviecard from './components/moviecard';\n// import Appbar from './components/Appbar';\nimport Moviedialog from './components/dialog';\n// import Card from './components/Cards';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { InputAdornment } from '@material-ui/core';\n\nconst Originalmovies=\n [ {id:1,title:'shaenshah'},\n  {id:2,title:'jatt and juliet'},\n  {id:3 ,title:'friends'}\n ];\n\n\nclass App extends Component{\n \n  state={movies : [],selectedmovie:null,search:''};\n  selectmovie=movie =>this.setState({selectedmovie:movie});\n  clearmovie=()=>this.setState({selectedmovie:null});\n  \n  searchTextchanged = e => this.setState({searchText: e.target.value});\n  \n  search= async e=>{\n    e.preventDefault();\n    const {searchText}=this.state;\n    const response= await fetch(`https://api.themoviedb.org/3/search/movie?api_key=1653a67bb789dfc91239b245e98ea74e&language=en-US&page=1&query=${searchText}`);\n    const json= await response.json();\n    this.setState({movies:json.results});\n\n\n  }\n\n  \n  async componentDidMount(){\n  //  setTimeout(()=>\n  //   this.setState({movies:Originalmovies}),5000);\n    const response= await fetch(`https://api.themoviedb.org/3/movie/top_rated?api_key=1653a67bb789dfc91239b245e98ea74e\n    `)\n    const json= await response.json();\n    this.setState({movies:json.results});\n\n}\n  render(){ \n    const{movies,selectedmovie,searchText}=this.state;\n    return(\n      <div className='app'>\n      <AppBar position=\"fixed\">\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className=\"button\"\n            color=\"inherit\"\n            aria-label=\"Open drawer\"\n          >\n            <MenuIcon />\n           </IconButton>\n          <Typography className='abc' variant=\"h4\" noWrap>\n            MOVIES \n          </Typography>\n          <form\n          onSubmit={this.search}>\n            <input \n            type=\"search\"\n            value={searchText}\n              onChange={this.searchTextchanged}\n            startAdornment={\n              <InputAdornment>\n              <span role='img'arial-label='search'>\n\n              </span>\n              </InputAdornment>\n            }>\n                </input>\n          </form>\n        </Toolbar>\n      </AppBar>\n     {movies.map(movie =><Moviecard movie={movie} selectmovie={this.selectmovie}/>)}\n     \n     <div>\n     <Moviedialog movie={selectedmovie} handleClose={this.clearmovie}/>\n     </div>\n      </div>\n\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}